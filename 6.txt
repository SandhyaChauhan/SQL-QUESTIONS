-- Question 14
-- Table: Person

-- +-------------+---------+
-- | Column Name | Type    |
-- +-------------+---------+
-- | PersonId    | int     |
-- | FirstName   | varchar |
-- | LastName    | varchar |
-- +-------------+---------+
-- PersonId is the primary key column for this table.
-- Table: Address

-- +-------------+---------+
-- | Column Name | Type    |
-- +-------------+---------+
-- | AddressId   | int     |
-- | PersonId    | int     |
-- | City        | varchar |
-- | State       | varchar |
-- +-------------+---------+
-- AddressId is the primary key column for this table.
 

-- Write a SQL query for a report that provides the following information for each person in the Person table,
-- regardless if there is an address for each of those people:

-- FirstName, LastName, City, State

Answer

-- Create the Person table
CREATE TABLE Person (
    PersonId INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50)
);

-- Create the Address table
CREATE TABLE Address (
    AddressId INT PRIMARY KEY,
    PersonId INT,
    City VARCHAR(50),
    State VARCHAR(50),
    FOREIGN KEY (PersonId) REFERENCES Person(PersonId)
);


-- Insert data into the Person table
INSERT INTO Person (PersonId, FirstName, LastName) VALUES 
(1, 'John', 'Doe'),
(2, 'Jane', 'Smith'),
(3, 'Alice', 'Johnson'),
(4, 'Bob', 'Brown');

-- Insert data into the Address table
INSERT INTO Address (AddressId, PersonId, City, State) VALUES 
(1, 1, 'New York', 'NY'),
(2, 2, 'Los Angeles', 'CA'),
(3, 3, 'Chicago', 'IL'),
(4, 4, 'Houston', 'TX'),
(5, 1, 'Brooklyn', 'NY'),  -- Another address for PersonId 1
(6, 2, 'San Francisco', 'CA');  -- Another address for PersonId 2

select * from Person;
select * from Address


select firstname , lastname , city , state
from Person p
left join Address a
on p.PersonId = a.PersonId ;

--spark

PersonDf.join(AddressDf , PersonDf.PersonId = AddressDf.personId , "left")
.select('firstname','lastname' , 'city' , 'state').show()
