- Question 24
-- Table my_numbers contains many numbers in column num including duplicated ones.
-- Can you write a SQL query to find the biggest number, which only appears once.

-- +---+
-- |num|
-- +---+
-- | 8 |
-- | 8 |
-- | 3 |
-- | 3 |
-- | 1 |
-- | 4 |
-- | 5 |
-- | 6 | 
-- For the sample data above, your query should return the following result:
-- +---+
-- |num|
-- +---+
-- | 6 |
-- Note:
-- If there is no such number, just output null.

-- Create the my_numbers table
CREATE TABLE my_numbers (
    num INT
);

-- Insert data into the my_numbers table
INSERT INTO my_numbers (num) VALUES 
(8),
(8),
(3),
(3),
(1),
(4),
(5),
(6);

select * from  my_numbers;

select num 
from my_numbers
group by num
having count(*)=1
order by num desc
limit 1

---- using spark ,
from pyspark.sql.functions import col, count

my_numbersDf.groupBy('num') \
    .agg(count('*').alias('count')) \
    .filter(col('count') == 1) \
    .select('num') \
    .orderBy(col('num').desc()) \
    .limit(1) \
    .show()


