Ques 1 
-- Question 21
-- Table: ActorDirector

-- +-------------+---------+
-- | Column Name | Type    |
-- +-------------+---------+
-- | actor_id    | int     |
-- | director_id | int     |
-- | timestamp   | int     |
-- +-------------+---------+
-- timestamp is the primary key column for this table.
 

-- Write a SQL query for a report that provides the pairs (actor_id, director_id) where the actor have cooperated with the director at least 3 times.

-- Example:

-- ActorDirector table:
-- +-------------+-------------+-------------+
-- | actor_id    | director_id | timestamp   |
-- +-------------+-------------+-------------+
-- | 1           | 1           | 0           |
-- | 1           | 1           | 1           |
-- | 1           | 1           | 2           |
-- | 1           | 2           | 3           |
-- | 1           | 2           | 4           |
-- | 2           | 1           | 5           |
-- | 2           | 1           | 6           |
-- +-------------+-------------+-------------+

-- Result table:
-- +-------------+-------------+
-- | actor_id    | director_id |
-- +-------------+-------------+
-- | 1           | 1           |
-- +-------------+-------------+
-- The only pair is (1, 1) where they cooperated exactly 3 times.

Answer :

create  database revise;
use revise;

-- Create the ActorDirector table
CREATE TABLE ActorDirector (
    actor_id INT,
    director_id INT,
    timestamp INT
);

-- Insert data into the ActorDirector table
INSERT INTO ActorDirector (actor_id, director_id, timestamp) VALUES 
(1, 1, 0),
(1, 1, 1),
(1, 1, 2),
(1, 2, 3),
(1, 2, 4),
(2, 1, 5),
(2, 1, 6);

select * from ActorDirector;

select actor_id , director_id 
from ActorDirector
group by actor_id , director_id 
having count(*) >=3


spark query :

from pyspark.sql.functions import col, count

ActorDirectorDf.groupBy('actor_id', 'director_id') \
    .agg(count('*').alias("c")) \
    .filter(col('c') >= 3) \
    .show()
